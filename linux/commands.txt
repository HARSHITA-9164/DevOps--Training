LINUX COMMON COMMANDS AND VI EDITOR SHORTCUTS:

1. ls
lists all the contents in the current working directory.

2. ls <path name>
By specifying the path after ls, the content in that path will be displayed.

3. ls –l 
lists all the contents along with its owner settings, permissions & time stamp 
(long format)

4. ls -a
lists all the hidden contents in the specified directory.

5. ls -lrt
list of files in order of recently modified at last.

6. sudo
This command executes only that command with root/ superuser privileges.

7. sudo useradd <username>
Adding a new user

8. sudo passwd <username>
Setting a password for the new user

9. usermod -aG sudo <user_name>
Give root access to the user.

10. sudo userdel <username>
Deleting the user

11. sudo groupadd <groupname>
Adding a new group

12. sudo groupdel <groupname>
Deleting the group

13. sudo usermod -g <groupname> <username>
Adding a user to a primary group

14. cat
This command can read, modify or concatenate text files. It also displays file 
contents.

15. cat -b
This adds line numbers to non-blank lines.

16. cat -n
This adds line numbers to all lines.

17. cat -s
This squeezes blank lines into one line.

18. cat –E
This shows $ at the end of line.

19. grep
This command searches for a particular string/ word in a text file. This is similar 
to “Ctrl+F” but executed via a CLI.

20. grep -i
Returns the results for case insensitive strings.

21. grep -n
Returns the matching strings along with their line number.

22. grep -v
Returns the result of lines not matching the search string.

23. grep -c
Returns the number of lines in which the results matched the search string.

24. sort
This command sorts the results of a search either alphabetically or 
numerically. It also sorts files, file contents, and directories.

25. sort -r
the flag returns the results in reverse order.

26. sort -f
the flag does case insensitive sorting

27. sort -n
the flag returns the results as per numerical order.

28. chmod
This command is used to change the access permissions of files and 
directories.

29. chmod <permissions of user, group, others> {filename}
4 – read permission
2 – write permission
1 – execute permission
0 – no permission

30. chmod 777 <filename.sh>
Give permission to file

31. ifconfig
ifconfig (interface configuration) command is used to configure the kernelresident network interfaces. 
It is used at the boot time to set up the interfaces as necessary. 
After that, it is usually used when needed during debugging or when you need system tuning.
Also, this command is used to assign the IP address and netmask to an interface or to enable or disable a given interface.

32. ifconfig -a
This option is used to display all the interfaces available, even if they are down.
ifconfig -sDisplay a short list, instead of details.

33. history
history command is used to view the previously executed command. These 
commands are saved in a history file. In Bash shell history command shows 
the whole list of the command

34. history 10
To show the limited number of commands that executed previously.

35. ssh-keygen
Use the ssh-keygen command to generate a public/private authentication key 
pair. Authentication keys allow a user to connect to a remote system without 
supplying a password. Keys must be generated for each user separately. If you 
generate key pairs as the root user, only the root can use the keys.

36. ssh-keygen -t rsa
The following example creates the public and private parts of an RSA key.

37. curl
curl is a command-line tool to transfer data to or from a server, using any of the 
supported protocols (HTTP, FTP, IMAP, POP3, SCP, SFTP, SMTP, TFTP, TELNET, 
LDAP or FILE). This tool is preferred for automation since it is designed to work 
without user interaction. It can transfer multiple files at once.

38. curi -o
saves the downloaded file on the local machine with the name provided in the 
parameters.

39. apt-get
apt-get is a command-line tool that helps in handling packages in Linux. Its 
main task is to retrieve the information and packages from the authenticated 
sources for installation, upgrade and removal of packages along with their 
dependencies. Here APT stands for the Advanced Packaging Tool

40. apt-get update
This command is used to synchronize the package index files from their 
sources again. You need to perform an update before you upgrade.

41. ps
Every process in Linux has a unique ID and can be seen using the command ps.

42. sudo ps aux
a=show processes for all users
u=display the process’s user/owner
x=also show processes not attached to a terminal

43. telnet localhost
connect to a remote Linux computer.
run programs remotely and conduct administration.

44. cd 
Change directory.

45. mkdir
Make folder or directory.

46. rm <file_name>
Remove file.

47. rm -r <dir_name>
Remove directory dir

48. rm -f <file_name>
Remove file forcefully.

49. rm -rf <dir_name>
Remove directory forcefully.

50. cp fileA fileB
Copy fileA to fileB

51. mv fileA fileB
Move or rename fileA to fileB

52. touch <file_name>
Create file.

53. cat <file_name>
Displays the content of file.

54. more <file_name>
Displays first 10 lines of file.

55. tail <file_name>
Displays last 10 line of file.

56. ping host
Ping host and output result

57. wget file
Download file.

58. top
Display top process.

59. kill pid
Kill process with process id.

60. netstat -r -v
Print network information, routing and connection.

61. df
Shows disk usage.

62. du
Shows directory space usage.

63. date
Shows the current Server date and time.

64. cal
Shows this month calendar.

65. whoami
Show user who is logged in.

66. tar cf file.tar files
create a tar named file.tar containing files.

67. tar xf file.tar
extract the files from file.tar

68. tar czf file.tar.gz files
create a tar with Gzip compression.

69. tar xzf file.tar.gz
extract a tar using Gzip

70. tar cjf file.tar.bz2
create a tar with Bzip2 compression.

71. tar xjf file.tar.bz2
extract a tar using Bzip2

72. gzip file
compresses file and renames it to file.gz

73. gzip -d file.gz
decompresses file.gz back to file

SHORTCUTS:

1. Ctrl+C – halts the current command.
2. Ctrl+Z – stops the current command, resume with fg in the foreground or bg in 
the background.
3. Ctrl+D – log out of current session, similar to exit.
4. Ctrl+W – erases one word in the current line.
5. Ctrl+U – erases the whole line.
6. Ctrl+R – type to bring up a recent command.
7. !! – repeats the last command.
8. exit – log out of current session.

LINUX COMMANDS FOR VI EDITOR:

1. :q
Simple exit

2. :w 
Save the file but keep it open.

3. :sh 
Execute Shell Commands 

4. :q! 
Exit without save.

5. :wq 
Exit by saving.

6. shift + ^ 
Move cursor at start of line.

7. shift + $
Move cursor at end of line.

8. shift + h
Move cursor at top of screen.

9. shift + L 
Move cursor at bottom of screen.

10. shift + A 
Insert Text at the end of line.

11. shift + n 
Search Next 

12. shift + s 
Replace entire line. 
 
13. gg 
To go in start of file

14. dd 
To delete the entire line

15. shift + G
To go in end of file

16. shift + U
Undo all last changes in line.
 
17. CTRL+d 
Move forward 1/2 screen.

18. YP 
Copy the current line and paste (Y for copy P for paste) 

19. P
Move cursor where u want to put the copied text. 

20. :s/pattern/replace/
Syntax for replace old string with new, here word pattern is old string. (Only on 
the line)

21. :%s/pattern/replace/
Replace at every occurrence.

22. dw 
Delete word. 

23. shift + d 
Delete to end of line. 

24. dd
Delete a single line at once.

25. ndd
Delete n numbers of line (n must be integer)

26. / xyz
To search xyz in opened file


